name: Django CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set environment variables
      run: echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV

    - name: Run migrations
      env:
        TEST_ENV: true
      run: python manage.py migrate

    - name: Run tests
      env:
        TEST_ENV: true
      run: python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.6.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

#      - name: Clean server directory
#        run: |
#          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
#          rm -rf ${{ secrets.DEPLOY_DIR }}/*
#          EOF



#      - name: Apply migrations on server
#        env:
#          TEST_ENV: ''
#        run: |
#          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
#          echo "Before cd, current directory:"
#          pwd
#          ls -la
#          cd ${{ secrets.DEPLOY_DIR }}
#          echo "After cd, current directory:"
#          pwd
#          ls -la
#          source venv/bin/activate
#          export SECRET_KEY='${{ secrets.SECRET_KEY }}'
#          export TEST_ENV=true
#          echo "DEBUG: TEST_ENV=$TEST_ENV"
#          python manage.py migrate
#          EOF

#      - name: Collect static files on server
#        run: |
#          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
#          cd ${{ secrets.DEPLOY_DIR }}
#          source venv/bin/activate
#          export SECRET_KEY='${{ secrets.SECRET_KEY }}'
#          export POSTGRES_DB='drf-hw'
#          export POSTGRES_USER='postgres'
#          export POSTGRES_PASSWORD='simplepassword123'
#          export DATABASE_HOST='localhost'
#          export DATABASE_PORT='5432'
#          export TEST_ENV=''
#          echo "DEBUG: POSTGRES_DB=$POSTGRES_DB"
#          echo "DEBUG: TEST_ENV=$TEST_ENV"
#          python manage.py collectstatic --noinput
#          EOF