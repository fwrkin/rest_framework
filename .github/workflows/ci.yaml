name: Django CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set environment variables
      run: echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV

    - name: Run migrations
      env:
        TEST_ENV: true
      run: python manage.py migrate

    - name: Run tests
      env:
        TEST_ENV: true
      run: python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.6.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Copy files to server via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "."
          target: ${{ secrets.DEPLOY_DIR }}

      - name: Apply migrations on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          echo "Before cd, current directory:"
          pwd
          ls -la
          cd ${{ secrets.DEPLOY_DIR }}
          echo "After cd, current directory:"
          pwd
          ls -la
          export POSTGRES_USER=postgres
          export POSTGRES_PASSWORD=simplepassword123
          export POSTGRES_DB=drf-hw
          export SECRET_KEY='${{ secrets.SECRET_KEY }}'
          docker-compose down --remove-orphans
          docker-compose up -d --build
          docker-compose exec web python manage.py migrate --noinput
          EOF

      - name: Collect static files on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          cd ${{ secrets.DEPLOY_DIR }}
          docker-compose exec web python manage.py collectstatic --noinput
          EOF